{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./projects/angular2-promise-buttons/src/angular2-promise-buttons.module.ts","./projects/angular2-promise-buttons/src/default-promise-btn-config.ts","./projects/angular2-promise-buttons/src/index.ts","./projects/angular2-promise-buttons/src/promise-btn.directive.ts","./projects/angular2-promise-buttons/src/user-cfg.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {PromiseBtnDirective} from './promise-btn.directive';\nimport {PromiseBtnConfig} from './promise-btn-config';\nimport {userCfg} from './user-cfg';\n\n@NgModule({\n  declarations: [\n    PromiseBtnDirective,\n  ],\n  imports: [],\n  exports: [\n    PromiseBtnDirective,\n  ],\n  providers: []\n})\nexport class Angular2PromiseButtonModule {\n  // add forRoot to make it configurable\n  static forRoot(config?: PromiseBtnConfig): ModuleWithProviders<Angular2PromiseButtonModule> {\n    // NOTE: this is never allowed to contain any conditional logic\n    return {\n      ngModule: Angular2PromiseButtonModule,\n      providers: [{provide: userCfg, useValue: config}]\n    };\n  }\n}\n","import {PromiseBtnConfig} from './promise-btn-config';\n\nexport const DEFAULT_CFG: PromiseBtnConfig = {\n  spinnerTpl: '<span class=\"btn-spinner\"></span>',\n  disableBtn: true,\n  btnLoadingClass: 'is-loading',\n  handleCurrentBtnOnly: false,\n  minDuration: null,\n};\n\n","export {PromiseBtnDirective} from './promise-btn.directive';\nexport {Angular2PromiseButtonModule} from './angular2-promise-buttons.module';\n","import {AfterContentInit, Directive, ElementRef, HostListener, Inject, Input, OnDestroy} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {DEFAULT_CFG} from './default-promise-btn-config';\nimport {PromiseBtnConfig} from './promise-btn-config';\nimport {userCfg} from './user-cfg';\n\n@Directive({\n  selector: '[promiseBtn]'\n})\n\nexport class PromiseBtnDirective implements OnDestroy, AfterContentInit {\n  cfg: PromiseBtnConfig;\n  // the timeout used for min duration display\n  minDurationTimeout: number;\n  // boolean to determine minDurationTimeout state\n  isMinDurationTimeoutDone: boolean;\n  // boolean to determine if promise was resolved\n  isPromiseDone: boolean;\n  // the promise button button element\n  btnEl: HTMLElement;\n  // the promise itself or a function expression\n  // NOTE: we need the type any here as we might deal with custom promises like bluebird\n  promise: any;\n\n  private _fakePromiseResolve: () => void;\n\n  constructor(el: ElementRef,\n              @Inject(userCfg) cfg: PromiseBtnConfig) {\n    // provide configuration\n    this.cfg = Object.assign({}, DEFAULT_CFG, cfg);\n\n    // save element\n    this.btnEl = el.nativeElement;\n  }\n\n  @Input()\n  set promiseBtn(passedValue: any) {\n    const isObservable: boolean = passedValue instanceof Observable;\n    const isSubscription: boolean = passedValue instanceof Subscription;\n    const isBoolean: boolean = typeof passedValue === 'boolean';\n    const isPromise: boolean = passedValue instanceof Promise || (\n      passedValue !== null &&\n      typeof passedValue === 'object' &&\n      typeof passedValue.then === 'function' &&\n      typeof passedValue.catch === 'function'\n    );\n\n    if (isObservable) {\n      throw new TypeError('promiseBtn must be an instance of Subscription, instance of Observable given');\n    } else if (isSubscription) {\n      this.promise = new Promise((resolve) => {\n        (passedValue as Subscription).add(resolve);\n      });\n    } else if (isPromise) {\n      this.promise = passedValue;\n    } else if (isBoolean) {\n      this.promise = this.createPromiseFromBoolean(passedValue);\n    }\n\n    this.checkAndInitPromiseHandler(this.btnEl);\n  }\n\n  ngAfterContentInit() {\n    this.prepareBtnEl(this.btnEl);\n    // trigger changes once to handle initial promises\n    this.checkAndInitPromiseHandler(this.btnEl);\n  }\n\n  ngOnDestroy() {\n    // cleanup\n    if (this.minDurationTimeout) {\n      clearTimeout(this.minDurationTimeout);\n    }\n  }\n\n  createPromiseFromBoolean(val: boolean): Promise<any> {\n    if (val) {\n      return new Promise((resolve) => {\n        this._fakePromiseResolve = resolve;\n      });\n    } else {\n      if (this._fakePromiseResolve) {\n        this._fakePromiseResolve();\n      }\n      return this.promise;\n    }\n  }\n\n  /**\n   * Initializes all html and event handlers\n   */\n  prepareBtnEl(btnEl: HTMLElement) {\n    // handle promises passed via promiseBtn attribute\n    this.appendSpinnerTpl(btnEl);\n  }\n\n  /**\n   * Checks if all required parameters are there and inits the promise handler\n   */\n  checkAndInitPromiseHandler(btnEl: HTMLElement) {\n    // check if element and promise is set\n    if (btnEl && this.promise) {\n      this.initPromiseHandler(btnEl);\n    }\n  }\n\n  /**\n   * Helper FN to add class\n   */\n  addLoadingClass(el: any) {\n    if (typeof this.cfg.btnLoadingClass === 'string') {\n      el.classList.add(this.cfg.btnLoadingClass);\n    }\n  }\n\n  /**\n   * Helper FN to remove classes\n   */\n  removeLoadingClass(el: any) {\n    if (typeof this.cfg.btnLoadingClass === 'string') {\n      el.classList.remove(this.cfg.btnLoadingClass);\n    }\n  }\n\n  /**\n   * Handles everything to be triggered when the button is set\n   * to loading state.\n   */\n  initLoadingState(btnEl: HTMLElement) {\n    this.addLoadingClass(btnEl);\n    this.disableBtn(btnEl);\n  }\n\n  /**\n   * Handles everything to be triggered when loading is finished\n   */\n  cancelLoadingStateIfPromiseAndMinDurationDone(btnEl: HTMLElement) {\n    if ((!this.cfg.minDuration || this.isMinDurationTimeoutDone) && this.isPromiseDone) {\n      this.removeLoadingClass(btnEl);\n      this.enableBtn(btnEl);\n    }\n  }\n\n  disableBtn(btnEl: HTMLElement) {\n    if (this.cfg.disableBtn) {\n      btnEl.setAttribute('disabled', 'disabled');\n    }\n  }\n\n  enableBtn(btnEl: HTMLElement) {\n    if (this.cfg.disableBtn) {\n      btnEl.removeAttribute('disabled');\n    }\n  }\n\n  /**\n   * Initializes a watcher for the promise. Also takes\n   * this.cfg.minDuration into account if given.\n   */\n\n  initPromiseHandler(btnEl: HTMLElement) {\n    const promise = this.promise;\n\n    // watch promise to resolve or fail\n    this.isMinDurationTimeoutDone = false;\n    this.isPromiseDone = false;\n\n    // create timeout if option is set\n    if (this.cfg.minDuration) {\n      this.minDurationTimeout = window.setTimeout(() => {\n        this.isMinDurationTimeoutDone = true;\n        this.cancelLoadingStateIfPromiseAndMinDurationDone(btnEl);\n      }, this.cfg.minDuration);\n    }\n\n    const resolveLoadingState = () => {\n      this.isPromiseDone = true;\n      this.cancelLoadingStateIfPromiseAndMinDurationDone(btnEl);\n    };\n\n    if (!this.cfg.handleCurrentBtnOnly) {\n      this.initLoadingState(btnEl);\n    }\n    // native Promise doesn't have finally\n    if (promise.finally) {\n      promise.finally(resolveLoadingState);\n    } else {\n      promise\n        .then(resolveLoadingState)\n        .catch(resolveLoadingState);\n    }\n\n  }\n\n\n  /**\n   * $compile and append the spinner template to the button.\n   */\n  appendSpinnerTpl(btnEl: HTMLElement) {\n    // TODO add some kind of compilation later on\n    btnEl.insertAdjacentHTML('beforeend', this.cfg.spinnerTpl as string);\n  }\n\n  /**\n   * Limit loading state to show only for the currently clicked button.\n   * Executed only if this.cfg.handleCurrentBtnOnly is set\n   */\n  @HostListener('click')\n  handleCurrentBtnOnly() {\n    if (!this.cfg.handleCurrentBtnOnly) {\n      return true; // return true for testing\n    }\n\n    // Click triggers @Input update\n    // We need to use timeout to wait for @Input to update\n    window.setTimeout(() => {\n      // return if something else than a promise is passed\n      if (!this.promise) {\n        return;\n      }\n\n      this.initLoadingState(this.btnEl);\n    }, 0);\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const userCfg = new InjectionToken('cfg');\n","import {Component} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Subscription} from 'rxjs';\n\nconst STANDARD_DELAY = 1000;\nconst FAKE_FACT = {\n  success () {\n    return new Promise((fulfill) => {\n      setTimeout(() => {\n        fulfill({\n          msg: 'SUCCESS'\n        });\n      }, STANDARD_DELAY);\n    });\n  },\n  error: () => {\n    return new Promise((fulfill, reject) => {\n      setTimeout(() => {\n        reject({\n          msg: 'ERROR'\n        });\n      }, STANDARD_DELAY);\n    });\n  },\n  endless: () => {\n    return new Promise((fulfill) => {\n      setTimeout(fulfill, 99999999);\n    });\n  },\n  endlessObservable: (): Observable<any> => {\n    return new Observable(() => {});\n  },\n  initSuccessObservable: (): Observable<any> => {\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.complete();\n      }, STANDARD_DELAY);\n    });\n  },\n  initErrorObservable: (): Observable<any> => {\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.error('ERROR');\n      }, STANDARD_DELAY);\n    });\n  },\n  initChainedObservable: (): Observable<number> => {\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(1);\n      }, 1000);\n\n      setTimeout(() => {\n        observer.next(2);\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next(3);\n      }, 3000);\n\n      setTimeout(() => {\n        observer.complete();\n      }, 4000);\n    });\n  },\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  successPromise: Promise<any>;\n  errorPromise: Promise<any>;\n  endlessInitialPromise: Promise<any>;\n  endlessPromise: Promise<any>;\n  submitPromise: Promise<any>;\n  chainedPromises: any;\n  promiseIndex: number;\n  myBool = true;\n\n  successObservable: Subscription;\n  errorObservable: Subscription;\n  endlessInitialObservable: Subscription;\n  endlessObservable: Subscription;\n  chainedObservableValue: any;\n  chainedObservable: Subscription;\n\n  constructor() {\n    this.endlessInitial();\n    this.initEndlessInitialObservable();\n  }\n\n  success($event: any): Promise<any> {\n    console.log($event);\n    this.successPromise = FAKE_FACT.success();\n    return this.successPromise;\n  }\n\n  error() {\n    this.errorPromise = FAKE_FACT.error()\n      .catch(() => {\n        console.log('YEAH ERROR');\n      });\n  }\n\n  endless() {\n    this.endlessPromise = FAKE_FACT.endless();\n  }\n\n  endlessInitial() {\n    this.endlessInitialPromise = FAKE_FACT.endless();\n  }\n\n  initSuccessObservable() {\n    const observable = FAKE_FACT.initSuccessObservable();\n    this.successObservable = observable.subscribe(\n      () => {},\n      () => {},\n      () => {}\n    );\n  }\n\n  initErrorObservable() {\n    const observable = FAKE_FACT.initErrorObservable();\n    this.errorObservable = observable.subscribe(\n      () => {},\n      (msg) => {\n        console.log(msg);\n      },\n      () => {},\n    );\n  }\n\n  initChainedObservable() {\n    const observable = FAKE_FACT.initChainedObservable();\n    this.chainedObservableValue = 'INITIALIZED';\n    this.chainedObservable = observable.subscribe(\n      (value: number) => {\n        this.chainedObservableValue = value;\n      },\n      () => {},\n      () => {\n        this.chainedObservableValue = 'COMPLETED';\n      }\n    );\n  }\n\n  initEndlessObservable() {\n    const observable = FAKE_FACT.endlessObservable();\n    this.endlessObservable = observable.subscribe(\n      () => {},\n      () => {},\n      () => {},\n    );\n  }\n\n  initEndlessInitialObservable() {\n    const observable = FAKE_FACT.endlessObservable();\n    this.endlessInitialObservable = observable.subscribe(\n      () => {},\n      () => {},\n      () => {},\n    );\n  }\n\n  submit() {\n    this.submitPromise = FAKE_FACT.success();\n  }\n\n  chain() {\n    this.promiseIndex = 0;\n    this.chainedPromises = this.countChain()\n      .then(this.countChain.bind(this))\n      .then(this.countChain.bind(this))\n      .then(this.countChain.bind(this))\n      .then(this.countChain.bind(this));\n\n    return this.chainedPromises;\n  }\n\n  countChain() {\n    return FAKE_FACT.success()\n      .then(() => {\n        this.promiseIndex++;\n      });\n  }\n}\n","<button class=\"btn btn-raised\"\n        (click)=\"success($event)\"\n        [promiseBtn]=\"successPromise\">Success after delay\n</button>\n<button class=\"btn btn-raised\"\n        (click)=\"error()\"\n        [promiseBtn]=\"errorPromise\">Error after delay\n</button>\n<br>\n<br>\n<button class=\"btn btn-raised\"\n        (click)=\"endless()\"\n        [promiseBtn]=\"endlessPromise\">Never resolving promise\n</button>\n<button class=\"btn btn-raised\"\n        [promiseBtn]=\"endlessInitialPromise\">Loading initially and forever\n</button>\n\n<h3>Same promise buttons</h3>\n<button class=\"btn btn-raised\"\n        (click)=\"success($event)\"\n        [promiseBtn]=\"successPromise\">We\n</button>\n<button class=\"btn btn-raised\"\n        (click)=\"success($event)\"\n        [promiseBtn]=\"successPromise\">share\n</button>\n\n<h3>Chained promise buttons</h3>\n<button class=\"btn btn-raised\"\n        (click)=\"chain()\"\n        [promiseBtn]=\"chainedPromises\">Load promise chain {{ promiseIndex }}\n</button>\n\n\n<h3>Inside a form</h3>\n<form (submit)=\"submit()\"\n      novalidate>\n  <button class=\"btn btn-raised\"\n          type=\"submit\"\n          [promiseBtn]=\"submitPromise\">Submit\n  </button>\n</form>\n\n<div>\n  <h2>Observable</h2>\n\n  <button class=\"btn btn-raised\"\n          (click)=\"initSuccessObservable()\"\n          [promiseBtn]=\"successObservable\">Success after delay\n  </button>\n  <button class=\"btn btn-raised\"\n          (click)=\"initErrorObservable()\"\n          [promiseBtn]=\"errorObservable\">Error after delay\n  </button>\n  <br>\n  <br>\n  <button class=\"btn btn-raised\"\n          (click)=\"initEndlessObservable()\"\n          [promiseBtn]=\"endlessObservable\">Never resolving Observable\n  </button>\n  <button class=\"btn btn-raised\"\n          [promiseBtn]=\"endlessInitialObservable\">Loading initially and forever\n  </button>\n\n  <h3>Same observable buttons</h3>\n  <button class=\"btn btn-raised\"\n          (click)=\"initSuccessObservable()\"\n          [promiseBtn]=\"successObservable\">We\n  </button>\n  <button class=\"btn btn-raised\"\n          (click)=\"initSuccessObservable()\"\n          [promiseBtn]=\"successObservable\">share\n  </button>\n\n  <h3>Chained observable button</h3>\n  <button class=\"btn btn-raised\"\n          (click)=\"initChainedObservable()\"\n          [promiseBtn]=\"chainedObservable\">Observable chain {{ chainedObservableValue }}\n  </button>\n</div>\n\n<div>\n  <h2>Simple Boolean</h2>\n  <button class=\"btn btn-raised\"\n          (click)=\"myBool=!myBool\">Toggle loading ({{myBool}})\n  </button>\n\n  <button class=\"btn btn-raised\"\n          [promiseBtn]=\"myBool\">My Boolean Btn {{myBool}}\n  </button>\n</div>\n","import {Angular2PromiseButtonModule} from '../../projects/angular2-promise-buttons/src';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    Angular2PromiseButtonModule\n      .forRoot({\n        // handleCurrentBtnOnly: true,\n      }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'zone.js';\nimport 'reflect-metadata';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}