{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///projects/angular2-promise-buttons/src/angular2-promise-buttons.module.ts","webpack:///projects/angular2-promise-buttons/src/default-promise-btn-config.ts","webpack:///projects/angular2-promise-buttons/src/index.ts","webpack:///projects/angular2-promise-buttons/src/promise-btn.directive.ts","webpack:///projects/angular2-promise-buttons/src/user-cfg.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Angular2PromiseButtonModule","config","ngModule","providers","provide","useValue","declarations","imports","DEFAULT_CFG","spinnerTpl","disableBtn","btnLoadingClass","handleCurrentBtnOnly","minDuration","PromiseBtnDirective","el","cfg","Object","assign","btnEl","nativeElement","prepareBtnEl","checkAndInitPromiseHandler","minDurationTimeout","clearTimeout","val","_fakePromiseResolve","promise","appendSpinnerTpl","initPromiseHandler","classList","add","remove","addLoadingClass","isMinDurationTimeoutDone","isPromiseDone","removeLoadingClass","enableBtn","setAttribute","removeAttribute","window","setTimeout","cancelLoadingStateIfPromiseAndMinDurationDone","resolveLoadingState","initLoadingState","insertAdjacentHTML","passedValue","isObservable","isSubscription","isBoolean","isPromise","TypeError","createPromiseFromBoolean","selector","userCfg","STANDARD_DELAY","FAKE_FACT","success","fulfill","msg","error","reject","endless","endlessObservable","initSuccessObservable","observer","complete","initErrorObservable","initChainedObservable","next","AppComponent","myBool","endlessInitial","initEndlessInitialObservable","$event","console","log","successPromise","errorPromise","endlessPromise","endlessInitialPromise","observable","successObservable","subscribe","errorObservable","chainedObservableValue","chainedObservable","value","endlessInitialObservable","submitPromise","promiseIndex","chainedPromises","countChain","bind","chain","submit","initEndlessObservable","templateUrl","styleUrls","AppModule","forRoot","bootstrap","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,2B;;;;;;;;;AACX;gCACeC,M,EAAyB;AACtC;AACA,iBAAO;AACLC,oBAAQ,EAAEF,2BADL;AAELG,qBAAS,EAAE,CAAC;AAACC,qBAAO,EAAE,iDAAV;AAAmBC,sBAAQ,EAAEJ;AAA7B,aAAD;AAFN,WAAP;AAID;;;;;;;YARUD;;;;yBAAAA,2B;AAA2B,O;AAAA,iBAF3B,E;AAAE,gBAJJ,EAII;;;;0HAEFA,2B,EAA2B;AAAA,uBARpC,0EAQoC;AARjB,kBAInB,0EAJmB;AAQiB,O;AAJjB,K;;;;;sEAIVA,2B,EAA2B;cAVvC,sDAUuC;eAV9B;AACRM,sBAAY,EAAE,CACZ,0EADY,CADN;AAIRC,iBAAO,EAAE,EAJD;AAKRT,iBAAO,EAAE,CACP,0EADO,CALD;AAQRK,mBAAS,EAAE;AARH,S;AAU8B,Q;;;;;;;;;;;;;;;;;;ACbxC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMK,WAAW,GAAqB;AAC3CC,gBAAU,EAAE,mCAD+B;AAE3CC,gBAAU,EAAE,IAF+B;AAG3CC,qBAAe,EAAE,YAH0B;AAI3CC,0BAAoB,EAAE,KAJqB;AAK3CC,iBAAW,EAAE;AAL8B,KAAtC;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,mB;;;AAgBX,mCAAYC,EAAZ,EAC6BC,GAD7B,EACoD;AAAA;;AAClD;AACA,aAAKA,GAAL,GAAWC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,uEAAlB,EAA+BF,GAA/B,CAAX,CAFkD,CAIlD;;AACA,aAAKG,KAAL,GAAaJ,EAAE,CAACK,aAAhB;AACD;;;;6CA6BoB;AACnB,eAAKC,YAAL,CAAkB,KAAKF,KAAvB,EADmB,CAEnB;;AACA,eAAKG,0BAAL,CAAgC,KAAKH,KAArC;AACD;;;sCAEa;AACZ;AACA,cAAI,KAAKI,kBAAT,EAA6B;AAC3BC,wBAAY,CAAC,KAAKD,kBAAN,CAAZ;AACD;AACF;;;iDAEwBE,G,EAAY;AAAA;;AACnC,cAAIA,GAAJ,EAAS;AACP,mBAAO,IAAInC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,mBAAI,CAACmC,mBAAL,GAA2BnC,OAA3B;AACD,aAFM,CAAP;AAGD,WAJD,MAIO;AACL,gBAAI,KAAKmC,mBAAT,EAA8B;AAC5B,mBAAKA,mBAAL;AACD;;AACD,mBAAO,KAAKC,OAAZ;AACD;AACF;AAED;;;;;;qCAGaR,K,EAAoB;AAC/B;AACA,eAAKS,gBAAL,CAAsBT,KAAtB;AACD;AAED;;;;;;mDAG2BA,K,EAAoB;AAC7C;AACA,cAAIA,KAAK,IAAI,KAAKQ,OAAlB,EAA2B;AACzB,iBAAKE,kBAAL,CAAwBV,KAAxB;AACD;AACF;AAED;;;;;;wCAGgBJ,E,EAAS;AACvB,cAAI,OAAO,KAAKC,GAAL,CAASL,eAAhB,KAAoC,QAAxC,EAAkD;AAChDI,cAAE,CAACe,SAAH,CAAaC,GAAb,CAAiB,KAAKf,GAAL,CAASL,eAA1B;AACD;AACF;AAED;;;;;;2CAGmBI,E,EAAS;AAC1B,cAAI,OAAO,KAAKC,GAAL,CAASL,eAAhB,KAAoC,QAAxC,EAAkD;AAChDI,cAAE,CAACe,SAAH,CAAaE,MAAb,CAAoB,KAAKhB,GAAL,CAASL,eAA7B;AACD;AACF;AAED;;;;;;;yCAIiBQ,K,EAAoB;AACnC,eAAKc,eAAL,CAAqBd,KAArB;AACA,eAAKT,UAAL,CAAgBS,KAAhB;AACD;AAED;;;;;;sEAG8CA,K,EAAoB;AAChE,cAAI,CAAC,CAAC,KAAKH,GAAL,CAASH,WAAV,IAAyB,KAAKqB,wBAA/B,KAA4D,KAAKC,aAArE,EAAoF;AAClF,iBAAKC,kBAAL,CAAwBjB,KAAxB;AACA,iBAAKkB,SAAL,CAAelB,KAAf;AACD;AACF;;;mCAEUA,K,EAAoB;AAC7B,cAAI,KAAKH,GAAL,CAASN,UAAb,EAAyB;AACvBS,iBAAK,CAACmB,YAAN,CAAmB,UAAnB,EAA+B,UAA/B;AACD;AACF;;;kCAESnB,K,EAAoB;AAC5B,cAAI,KAAKH,GAAL,CAASN,UAAb,EAAyB;AACvBS,iBAAK,CAACoB,eAAN,CAAsB,UAAtB;AACD;AACF;AAED;;;;;;;2CAKmBpB,K,EAAoB;AAAA;;AACrC,cAAMQ,OAAO,GAAG,KAAKA,OAArB,CADqC,CAGrC;;AACA,eAAKO,wBAAL,GAAgC,KAAhC;AACA,eAAKC,aAAL,GAAqB,KAArB,CALqC,CAOrC;;AACA,cAAI,KAAKnB,GAAL,CAASH,WAAb,EAA0B;AACxB,iBAAKU,kBAAL,GAA0BiB,MAAM,CAACC,UAAP,CAAkB,YAAM;AAChD,oBAAI,CAACP,wBAAL,GAAgC,IAAhC;;AACA,oBAAI,CAACQ,6CAAL,CAAmDvB,KAAnD;AACD,aAHyB,EAGvB,KAAKH,GAAL,CAASH,WAHc,CAA1B;AAID;;AAED,cAAM8B,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,kBAAI,CAACR,aAAL,GAAqB,IAArB;;AACA,kBAAI,CAACO,6CAAL,CAAmDvB,KAAnD;AACD,WAHD;;AAKA,cAAI,CAAC,KAAKH,GAAL,CAASJ,oBAAd,EAAoC;AAClC,iBAAKgC,gBAAL,CAAsBzB,KAAtB;AACD,WAtBoC,CAuBrC;;;AACA,cAAIQ,OAAO,WAAX,EAAqB;AACnBA,mBAAO,WAAP,CAAgBgB,mBAAhB;AACD,WAFD,MAEO;AACLhB,mBAAO,CACJnC,IADH,CACQmD,mBADR,WAESA,mBAFT;AAGD;AAEF;AAGD;;;;;;yCAGiBxB,K,EAAoB;AACnC;AACAA,eAAK,CAAC0B,kBAAN,CAAyB,WAAzB,EAAsC,KAAK7B,GAAL,CAASP,UAA/C;AACD;AAED;;;;;;;+CAKuB;AAAA;;AACrB,cAAI,CAAC,KAAKO,GAAL,CAASJ,oBAAd,EAAoC;AAClC,mBAAO,IAAP,CADkC,CACrB;AACd,WAHoB,CAKrB;AACA;;;AACA4B,gBAAM,CAACC,UAAP,CAAkB,YAAM;AACtB;AACA,gBAAI,CAAC,MAAI,CAACd,OAAV,EAAmB;AACjB;AACD;;AAED,kBAAI,CAACiB,gBAAL,CAAsB,MAAI,CAACzB,KAA3B;AACD,WAPD,EAOG,CAPH;AAQD;;;0BA3Lc2B,W,EAAkB;AAC/B,cAAMC,YAAY,GAAYD,WAAW,YAAY,+CAArD;AACA,cAAME,cAAc,GAAYF,WAAW,YAAY,iDAAvD;AACA,cAAMG,SAAS,GAAY,OAAOH,WAAP,KAAuB,SAAlD;AACA,cAAMI,SAAS,GAAYJ,WAAW,YAAYxD,OAAvB,IACzBwD,WAAW,KAAK,IAAhB,IACA,OAAOA,WAAP,KAAuB,QADvB,IAEA,OAAOA,WAAW,CAACtD,IAAnB,KAA4B,UAF5B,IAGA,OAAOsD,WAAW,SAAlB,KAA6B,UAJ/B;;AAOA,cAAIC,YAAJ,EAAkB;AAChB,kBAAM,IAAII,SAAJ,CAAc,8EAAd,CAAN;AACD,WAFD,MAEO,IAAIH,cAAJ,EAAoB;AACzB,iBAAKrB,OAAL,GAAe,IAAIrC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACrCuD,yBAA4B,CAACf,GAA7B,CAAiCxC,OAAjC;AACF,aAFc,CAAf;AAGD,WAJM,MAIA,IAAI2D,SAAJ,EAAe;AACpB,iBAAKvB,OAAL,GAAemB,WAAf;AACD,WAFM,MAEA,IAAIG,SAAJ,EAAe;AACpB,iBAAKtB,OAAL,GAAe,KAAKyB,wBAAL,CAA8BN,WAA9B,CAAf;AACD;;AAED,eAAKxB,0BAAL,CAAgC,KAAKH,KAArC;AACD;;;;;;;uBAlDUL,mB,EAAmB,yH,EAAA,gEAiBV,iDAjBU,C;AAiBH,K;;;YAjBhBA,mB;AAAmB,yC;AAAA;AAAA;;;;;;;;;;;;;sEAAnBA,mB,EAAmB;cAJ/B,uDAI+B;eAJrB;AACTuC,kBAAQ,EAAE;AADD,S;AAIqB,Q;;;;;;kBAiBjB,oD;mBAAO,iD;;;;;gBAQnB;;;gBA4KA,0D;iBAAa,O;;;;;;;;;;;;;;;;;;;;AC/MhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMC,OAAO,GAAG,IAAI,4DAAJ,CAAmB,KAAnB,CAAhB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,cAAc,GAAG,IAAvB;AACA,QAAMC,SAAS,GAAG;AAChBC,aADgB,qBACT;AACL,eAAO,IAAInE,OAAJ,CAAY,UAACoE,OAAD,EAAa;AAC9BjB,oBAAU,CAAC,YAAM;AACfiB,mBAAO,CAAC;AACNC,iBAAG,EAAE;AADC,aAAD,CAAP;AAGD,WAJS,EAIPJ,cAJO,CAAV;AAKD,SANM,CAAP;AAOD,OATe;AAUhBK,WAAK,EAAE,iBAAM;AACX,eAAO,IAAItE,OAAJ,CAAY,UAACoE,OAAD,EAAUG,MAAV,EAAqB;AACtCpB,oBAAU,CAAC,YAAM;AACfoB,kBAAM,CAAC;AACLF,iBAAG,EAAE;AADA,aAAD,CAAN;AAGD,WAJS,EAIPJ,cAJO,CAAV;AAKD,SANM,CAAP;AAOD,OAlBe;AAmBhBO,aAAO,EAAE,mBAAM;AACb,eAAO,IAAIxE,OAAJ,CAAY,UAACoE,OAAD,EAAa;AAC9BjB,oBAAU,CAACiB,OAAD,EAAU,QAAV,CAAV;AACD,SAFM,CAAP;AAGD,OAvBe;AAwBhBK,uBAAiB,EAAE,6BAAuB;AACxC,eAAO,IAAI,+CAAJ,CAAe,YAAM,CAAE,CAAvB,CAAP;AACD,OA1Be;AA2BhBC,2BAAqB,EAAE,iCAAuB;AAC5C,eAAO,IAAI,+CAAJ,CAAe,UAAAC,QAAQ,EAAI;AAChCxB,oBAAU,CAAC,YAAM;AACfwB,oBAAQ,CAACC,QAAT;AACD,WAFS,EAEPX,cAFO,CAAV;AAGD,SAJM,CAAP;AAKD,OAjCe;AAkChBY,yBAAmB,EAAE,+BAAuB;AAC1C,eAAO,IAAI,+CAAJ,CAAe,UAAAF,QAAQ,EAAI;AAChCxB,oBAAU,CAAC,YAAM;AACfwB,oBAAQ,CAACL,KAAT,CAAe,OAAf;AACD,WAFS,EAEPL,cAFO,CAAV;AAGD,SAJM,CAAP;AAKD,OAxCe;AAyChBa,2BAAqB,EAAE,iCAA0B;AAC/C,eAAO,IAAI,+CAAJ,CAAe,UAAAH,QAAQ,EAAI;AAChCxB,oBAAU,CAAC,YAAM;AACfwB,oBAAQ,CAACI,IAAT,CAAc,CAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAIA5B,oBAAU,CAAC,YAAM;AACfwB,oBAAQ,CAACI,IAAT,CAAc,CAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAIA5B,oBAAU,CAAC,YAAM;AACfwB,oBAAQ,CAACI,IAAT,CAAc,CAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAIA5B,oBAAU,CAAC,YAAM;AACfwB,oBAAQ,CAACC,QAAT;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAhBM,CAAP;AAiBD;AA3De,KAAlB;;QAmEaI,Y;;;AAiBX,8BAAc;AAAA;;AATd,aAAAC,MAAA,GAAS,IAAT;AAUE,aAAKC,cAAL;AACA,aAAKC,4BAAL;AACD;;;;gCAEOC,M,EAAW;AACjBC,iBAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,eAAKG,cAAL,GAAsBrB,SAAS,CAACC,OAAV,EAAtB;AACA,iBAAO,KAAKoB,cAAZ;AACD;;;gCAEO;AACN,eAAKC,YAAL,GAAoBtB,SAAS,CAACI,KAAV,YACX,YAAM;AACXe,mBAAO,CAACC,GAAR,CAAY,YAAZ;AACD,WAHiB,CAApB;AAID;;;kCAES;AACR,eAAKG,cAAL,GAAsBvB,SAAS,CAACM,OAAV,EAAtB;AACD;;;yCAEgB;AACf,eAAKkB,qBAAL,GAA6BxB,SAAS,CAACM,OAAV,EAA7B;AACD;;;gDAEuB;AACtB,cAAMmB,UAAU,GAAGzB,SAAS,CAACQ,qBAAV,EAAnB;AACA,eAAKkB,iBAAL,GAAyBD,UAAU,CAACE,SAAX,CACvB,YAAM,CAAE,CADe,EAEvB,YAAM,CAAE,CAFe,EAGvB,YAAM,CAAE,CAHe,CAAzB;AAKD;;;8CAEqB;AACpB,cAAMF,UAAU,GAAGzB,SAAS,CAACW,mBAAV,EAAnB;AACA,eAAKiB,eAAL,GAAuBH,UAAU,CAACE,SAAX,CACrB,YAAM,CAAE,CADa,EAErB,UAACxB,GAAD,EAAS;AACPgB,mBAAO,CAACC,GAAR,CAAYjB,GAAZ;AACD,WAJoB,EAKrB,YAAM,CAAE,CALa,CAAvB;AAOD;;;gDAEuB;AAAA;;AACtB,cAAMsB,UAAU,GAAGzB,SAAS,CAACY,qBAAV,EAAnB;AACA,eAAKiB,sBAAL,GAA8B,aAA9B;AACA,eAAKC,iBAAL,GAAyBL,UAAU,CAACE,SAAX,CACvB,UAACI,KAAD,EAAmB;AACjB,kBAAI,CAACF,sBAAL,GAA8BE,KAA9B;AACD,WAHsB,EAIvB,YAAM,CAAE,CAJe,EAKvB,YAAM;AACJ,kBAAI,CAACF,sBAAL,GAA8B,WAA9B;AACD,WAPsB,CAAzB;AASD;;;gDAEuB;AACtB,cAAMJ,UAAU,GAAGzB,SAAS,CAACO,iBAAV,EAAnB;AACA,eAAKA,iBAAL,GAAyBkB,UAAU,CAACE,SAAX,CACvB,YAAM,CAAE,CADe,EAEvB,YAAM,CAAE,CAFe,EAGvB,YAAM,CAAE,CAHe,CAAzB;AAKD;;;uDAE8B;AAC7B,cAAMF,UAAU,GAAGzB,SAAS,CAACO,iBAAV,EAAnB;AACA,eAAKyB,wBAAL,GAAgCP,UAAU,CAACE,SAAX,CAC9B,YAAM,CAAE,CADsB,EAE9B,YAAM,CAAE,CAFsB,EAG9B,YAAM,CAAE,CAHsB,CAAhC;AAKD;;;iCAEQ;AACP,eAAKM,aAAL,GAAqBjC,SAAS,CAACC,OAAV,EAArB;AACD;;;gCAEO;AACN,eAAKiC,YAAL,GAAoB,CAApB;AACA,eAAKC,eAAL,GAAuB,KAAKC,UAAL,GACpBpG,IADoB,CACf,KAAKoG,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CADe,EAEpBrG,IAFoB,CAEf,KAAKoG,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAFe,EAGpBrG,IAHoB,CAGf,KAAKoG,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAHe,EAIpBrG,IAJoB,CAIf,KAAKoG,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAJe,CAAvB;AAMA,iBAAO,KAAKF,eAAZ;AACD;;;qCAEY;AAAA;;AACX,iBAAOnC,SAAS,CAACC,OAAV,GACJjE,IADI,CACC,YAAM;AACV,kBAAI,CAACkG,YAAL;AACD,WAHI,CAAP;AAID;;;;;;;uBAnHUpB,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,c;AAAA,iP;AAAA;AAAA;ACxEzB;;AACQ;AAAA,mBAAS,IAAAb,OAAA,QAAT;AAAwB,WAAxB;;AAC8B;;AACtC;;AACA;;AACQ;AAAA,mBAAS,IAAAG,KAAA,EAAT;AAAgB,WAAhB;;AAC4B;;AACpC;;AACA;;AACA;;AACA;;AACQ;AAAA,mBAAS,IAAAE,OAAA,EAAT;AAAkB,WAAlB;;AAC8B;;AACtC;;AACA;;AAC6C;;AAC7C;;AAEA;;AAAI;;AAAoB;;AACxB;;AACQ;AAAA,mBAAS,IAAAL,OAAA,QAAT;AAAwB,WAAxB;;AAC8B;;AACtC;;AACA;;AACQ;AAAA,mBAAS,IAAAA,OAAA,QAAT;AAAwB,WAAxB;;AAC8B;;AACtC;;AAEA;;AAAI;;AAAuB;;AAC3B;;AACQ;AAAA,mBAAS,IAAAqC,KAAA,EAAT;AAAgB,WAAhB;;AAC+B;;AACvC;;AAGA;;AAAI;;AAAa;;AACjB;;AAAM;AAAA,mBAAU,IAAAC,MAAA,EAAV;AAAkB,WAAlB;;AAEJ;;AAEqC;;AACrC;;AACF;;AAEA;;AACE;;AAAI;;AAAU;;AAEd;;AACQ;AAAA,mBAAS,IAAA/B,qBAAA,EAAT;AAAgC,WAAhC;;AACiC;;AACzC;;AACA;;AACQ;AAAA,mBAAS,IAAAG,mBAAA,EAAT;AAA8B,WAA9B;;AAC+B;;AACvC;;AACA;;AACA;;AACA;;AACQ;AAAA,mBAAS,IAAA6B,qBAAA,EAAT;AAAgC,WAAhC;;AACiC;;AACzC;;AACA;;AACgD;;AAChD;;AAEA;;AAAI;;AAAuB;;AAC3B;;AACQ;AAAA,mBAAS,IAAAhC,qBAAA,EAAT;AAAgC,WAAhC;;AACiC;;AACzC;;AACA;;AACQ;AAAA,mBAAS,IAAAA,qBAAA,EAAT;AAAgC,WAAhC;;AACiC;;AACzC;;AAEA;;AAAI;;AAAyB;;AAC7B;;AACQ;AAAA,mBAAS,IAAAI,qBAAA,EAAT;AAAgC,WAAhC;;AACiC;;AACzC;;AACF;;AAEA;;AACE;;AAAI;;AAAc;;AAClB;;AACQ;AAAA;AAAA;;AAAyB;;AACjC;;AAEA;;AAC8B;;AAC9B;;AACF;;;;AAzFQ;;AAIA;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;AAMA;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAA+B;;AAAA;;AAS7B;;AAAA;;AASA;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;AAMA;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAAiC;;AAAA;;AAOR;;AAAA;;AAIzB;;AAAA;;AAAsB;;AAAA;;;;;;;;;sEDjBnBE,Y,EAAY;cALxB,uDAKwB;eALd;AACTjB,kBAAQ,EAAE,UADD;AAET4C,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AExEzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBARJ,CACP,uEADO,EAEP,0DAFO,EAGP,mGACGC,OADH,CACW,CACP;AADO,OADX,CAHO,CAQI;;;;0HAGFD,S,EAAS;AAAA,uBAblB,2DAakB;AAbN,kBAGZ,uEAHY,EAIZ,0DAJY,EAID,kIAJC;AAaM,O;AATP,K;;;;;sEASFA,S,EAAS;cAfrB,sDAeqB;eAfZ;AACR7F,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,mGACG6F,OADH,CACW,CACP;AADO,WADX,CAHO,CAJD;AAYRjG,mBAAS,EAAE,EAZH;AAaRkG,mBAAS,EAAE,CAAC,2DAAD;AAbH,S;AAeY,Q;;;;;;;;;;;;;;;;;;ACtBtB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {PromiseBtnDirective} from './promise-btn.directive';\nimport {PromiseBtnConfig} from './promise-btn-config';\nimport {userCfg} from './user-cfg';\n\n@NgModule({\n  declarations: [\n    PromiseBtnDirective,\n  ],\n  imports: [],\n  exports: [\n    PromiseBtnDirective,\n  ],\n  providers: []\n})\nexport class Angular2PromiseButtonModule {\n  // add forRoot to make it configurable\n  static forRoot(config?: PromiseBtnConfig): ModuleWithProviders<Angular2PromiseButtonModule> {\n    // NOTE: this is never allowed to contain any conditional logic\n    return {\n      ngModule: Angular2PromiseButtonModule,\n      providers: [{provide: userCfg, useValue: config}]\n    };\n  }\n}\n","import {PromiseBtnConfig} from './promise-btn-config';\n\nexport const DEFAULT_CFG: PromiseBtnConfig = {\n  spinnerTpl: '<span class=\"btn-spinner\"></span>',\n  disableBtn: true,\n  btnLoadingClass: 'is-loading',\n  handleCurrentBtnOnly: false,\n  minDuration: null,\n};\n\n","export {PromiseBtnDirective} from './promise-btn.directive';\nexport {Angular2PromiseButtonModule} from './angular2-promise-buttons.module';\n","import {AfterContentInit, Directive, ElementRef, HostListener, Inject, Input, OnDestroy} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {DEFAULT_CFG} from './default-promise-btn-config';\nimport {PromiseBtnConfig} from './promise-btn-config';\nimport {userCfg} from './user-cfg';\n\n@Directive({\n  selector: '[promiseBtn]'\n})\n\nexport class PromiseBtnDirective implements OnDestroy, AfterContentInit {\n  cfg: PromiseBtnConfig;\n  // the timeout used for min duration display\n  minDurationTimeout: number;\n  // boolean to determine minDurationTimeout state\n  isMinDurationTimeoutDone: boolean;\n  // boolean to determine if promise was resolved\n  isPromiseDone: boolean;\n  // the promise button button element\n  btnEl: HTMLElement;\n  // the promise itself or a function expression\n  // NOTE: we need the type any here as we might deal with custom promises like bluebird\n  promise: any;\n\n  private _fakePromiseResolve: () => void;\n\n  constructor(el: ElementRef,\n              @Inject(userCfg) cfg: PromiseBtnConfig) {\n    // provide configuration\n    this.cfg = Object.assign({}, DEFAULT_CFG, cfg);\n\n    // save element\n    this.btnEl = el.nativeElement;\n  }\n\n  @Input()\n  set promiseBtn(passedValue: any) {\n    const isObservable: boolean = passedValue instanceof Observable;\n    const isSubscription: boolean = passedValue instanceof Subscription;\n    const isBoolean: boolean = typeof passedValue === 'boolean';\n    const isPromise: boolean = passedValue instanceof Promise || (\n      passedValue !== null &&\n      typeof passedValue === 'object' &&\n      typeof passedValue.then === 'function' &&\n      typeof passedValue.catch === 'function'\n    );\n\n    if (isObservable) {\n      throw new TypeError('promiseBtn must be an instance of Subscription, instance of Observable given');\n    } else if (isSubscription) {\n      this.promise = new Promise((resolve) => {\n        (passedValue as Subscription).add(resolve);\n      });\n    } else if (isPromise) {\n      this.promise = passedValue;\n    } else if (isBoolean) {\n      this.promise = this.createPromiseFromBoolean(passedValue);\n    }\n\n    this.checkAndInitPromiseHandler(this.btnEl);\n  }\n\n  ngAfterContentInit() {\n    this.prepareBtnEl(this.btnEl);\n    // trigger changes once to handle initial promises\n    this.checkAndInitPromiseHandler(this.btnEl);\n  }\n\n  ngOnDestroy() {\n    // cleanup\n    if (this.minDurationTimeout) {\n      clearTimeout(this.minDurationTimeout);\n    }\n  }\n\n  createPromiseFromBoolean(val: boolean): Promise<any> {\n    if (val) {\n      return new Promise((resolve) => {\n        this._fakePromiseResolve = resolve;\n      });\n    } else {\n      if (this._fakePromiseResolve) {\n        this._fakePromiseResolve();\n      }\n      return this.promise;\n    }\n  }\n\n  /**\n   * Initializes all html and event handlers\n   */\n  prepareBtnEl(btnEl: HTMLElement) {\n    // handle promises passed via promiseBtn attribute\n    this.appendSpinnerTpl(btnEl);\n  }\n\n  /**\n   * Checks if all required parameters are there and inits the promise handler\n   */\n  checkAndInitPromiseHandler(btnEl: HTMLElement) {\n    // check if element and promise is set\n    if (btnEl && this.promise) {\n      this.initPromiseHandler(btnEl);\n    }\n  }\n\n  /**\n   * Helper FN to add class\n   */\n  addLoadingClass(el: any) {\n    if (typeof this.cfg.btnLoadingClass === 'string') {\n      el.classList.add(this.cfg.btnLoadingClass);\n    }\n  }\n\n  /**\n   * Helper FN to remove classes\n   */\n  removeLoadingClass(el: any) {\n    if (typeof this.cfg.btnLoadingClass === 'string') {\n      el.classList.remove(this.cfg.btnLoadingClass);\n    }\n  }\n\n  /**\n   * Handles everything to be triggered when the button is set\n   * to loading state.\n   */\n  initLoadingState(btnEl: HTMLElement) {\n    this.addLoadingClass(btnEl);\n    this.disableBtn(btnEl);\n  }\n\n  /**\n   * Handles everything to be triggered when loading is finished\n   */\n  cancelLoadingStateIfPromiseAndMinDurationDone(btnEl: HTMLElement) {\n    if ((!this.cfg.minDuration || this.isMinDurationTimeoutDone) && this.isPromiseDone) {\n      this.removeLoadingClass(btnEl);\n      this.enableBtn(btnEl);\n    }\n  }\n\n  disableBtn(btnEl: HTMLElement) {\n    if (this.cfg.disableBtn) {\n      btnEl.setAttribute('disabled', 'disabled');\n    }\n  }\n\n  enableBtn(btnEl: HTMLElement) {\n    if (this.cfg.disableBtn) {\n      btnEl.removeAttribute('disabled');\n    }\n  }\n\n  /**\n   * Initializes a watcher for the promise. Also takes\n   * this.cfg.minDuration into account if given.\n   */\n\n  initPromiseHandler(btnEl: HTMLElement) {\n    const promise = this.promise;\n\n    // watch promise to resolve or fail\n    this.isMinDurationTimeoutDone = false;\n    this.isPromiseDone = false;\n\n    // create timeout if option is set\n    if (this.cfg.minDuration) {\n      this.minDurationTimeout = window.setTimeout(() => {\n        this.isMinDurationTimeoutDone = true;\n        this.cancelLoadingStateIfPromiseAndMinDurationDone(btnEl);\n      }, this.cfg.minDuration);\n    }\n\n    const resolveLoadingState = () => {\n      this.isPromiseDone = true;\n      this.cancelLoadingStateIfPromiseAndMinDurationDone(btnEl);\n    };\n\n    if (!this.cfg.handleCurrentBtnOnly) {\n      this.initLoadingState(btnEl);\n    }\n    // native Promise doesn't have finally\n    if (promise.finally) {\n      promise.finally(resolveLoadingState);\n    } else {\n      promise\n        .then(resolveLoadingState)\n        .catch(resolveLoadingState);\n    }\n\n  }\n\n\n  /**\n   * $compile and append the spinner template to the button.\n   */\n  appendSpinnerTpl(btnEl: HTMLElement) {\n    // TODO add some kind of compilation later on\n    btnEl.insertAdjacentHTML('beforeend', this.cfg.spinnerTpl as string);\n  }\n\n  /**\n   * Limit loading state to show only for the currently clicked button.\n   * Executed only if this.cfg.handleCurrentBtnOnly is set\n   */\n  @HostListener('click')\n  handleCurrentBtnOnly() {\n    if (!this.cfg.handleCurrentBtnOnly) {\n      return true; // return true for testing\n    }\n\n    // Click triggers @Input update\n    // We need to use timeout to wait for @Input to update\n    window.setTimeout(() => {\n      // return if something else than a promise is passed\n      if (!this.promise) {\n        return;\n      }\n\n      this.initLoadingState(this.btnEl);\n    }, 0);\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const userCfg = new InjectionToken('cfg');\n","import {Component} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Subscription} from 'rxjs';\n\nconst STANDARD_DELAY = 1000;\nconst FAKE_FACT = {\n  success () {\n    return new Promise((fulfill) => {\n      setTimeout(() => {\n        fulfill({\n          msg: 'SUCCESS'\n        });\n      }, STANDARD_DELAY);\n    });\n  },\n  error: () => {\n    return new Promise((fulfill, reject) => {\n      setTimeout(() => {\n        reject({\n          msg: 'ERROR'\n        });\n      }, STANDARD_DELAY);\n    });\n  },\n  endless: () => {\n    return new Promise((fulfill) => {\n      setTimeout(fulfill, 99999999);\n    });\n  },\n  endlessObservable: (): Observable<any> => {\n    return new Observable(() => {});\n  },\n  initSuccessObservable: (): Observable<any> => {\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.complete();\n      }, STANDARD_DELAY);\n    });\n  },\n  initErrorObservable: (): Observable<any> => {\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.error('ERROR');\n      }, STANDARD_DELAY);\n    });\n  },\n  initChainedObservable: (): Observable<number> => {\n    return new Observable(observer => {\n      setTimeout(() => {\n        observer.next(1);\n      }, 1000);\n\n      setTimeout(() => {\n        observer.next(2);\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next(3);\n      }, 3000);\n\n      setTimeout(() => {\n        observer.complete();\n      }, 4000);\n    });\n  },\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  successPromise: Promise<any>;\n  errorPromise: Promise<any>;\n  endlessInitialPromise: Promise<any>;\n  endlessPromise: Promise<any>;\n  submitPromise: Promise<any>;\n  chainedPromises: any;\n  promiseIndex: number;\n  myBool = true;\n\n  successObservable: Subscription;\n  errorObservable: Subscription;\n  endlessInitialObservable: Subscription;\n  endlessObservable: Subscription;\n  chainedObservableValue: any;\n  chainedObservable: Subscription;\n\n  constructor() {\n    this.endlessInitial();\n    this.initEndlessInitialObservable();\n  }\n\n  success($event: any): Promise<any> {\n    console.log($event);\n    this.successPromise = FAKE_FACT.success();\n    return this.successPromise;\n  }\n\n  error() {\n    this.errorPromise = FAKE_FACT.error()\n      .catch(() => {\n        console.log('YEAH ERROR');\n      });\n  }\n\n  endless() {\n    this.endlessPromise = FAKE_FACT.endless();\n  }\n\n  endlessInitial() {\n    this.endlessInitialPromise = FAKE_FACT.endless();\n  }\n\n  initSuccessObservable() {\n    const observable = FAKE_FACT.initSuccessObservable();\n    this.successObservable = observable.subscribe(\n      () => {},\n      () => {},\n      () => {}\n    );\n  }\n\n  initErrorObservable() {\n    const observable = FAKE_FACT.initErrorObservable();\n    this.errorObservable = observable.subscribe(\n      () => {},\n      (msg) => {\n        console.log(msg);\n      },\n      () => {},\n    );\n  }\n\n  initChainedObservable() {\n    const observable = FAKE_FACT.initChainedObservable();\n    this.chainedObservableValue = 'INITIALIZED';\n    this.chainedObservable = observable.subscribe(\n      (value: number) => {\n        this.chainedObservableValue = value;\n      },\n      () => {},\n      () => {\n        this.chainedObservableValue = 'COMPLETED';\n      }\n    );\n  }\n\n  initEndlessObservable() {\n    const observable = FAKE_FACT.endlessObservable();\n    this.endlessObservable = observable.subscribe(\n      () => {},\n      () => {},\n      () => {},\n    );\n  }\n\n  initEndlessInitialObservable() {\n    const observable = FAKE_FACT.endlessObservable();\n    this.endlessInitialObservable = observable.subscribe(\n      () => {},\n      () => {},\n      () => {},\n    );\n  }\n\n  submit() {\n    this.submitPromise = FAKE_FACT.success();\n  }\n\n  chain() {\n    this.promiseIndex = 0;\n    this.chainedPromises = this.countChain()\n      .then(this.countChain.bind(this))\n      .then(this.countChain.bind(this))\n      .then(this.countChain.bind(this))\n      .then(this.countChain.bind(this));\n\n    return this.chainedPromises;\n  }\n\n  countChain() {\n    return FAKE_FACT.success()\n      .then(() => {\n        this.promiseIndex++;\n      });\n  }\n}\n","<button class=\"btn btn-raised\"\n        (click)=\"success($event)\"\n        [promiseBtn]=\"successPromise\">Success after delay\n</button>\n<button class=\"btn btn-raised\"\n        (click)=\"error()\"\n        [promiseBtn]=\"errorPromise\">Error after delay\n</button>\n<br>\n<br>\n<button class=\"btn btn-raised\"\n        (click)=\"endless()\"\n        [promiseBtn]=\"endlessPromise\">Never resolving promise\n</button>\n<button class=\"btn btn-raised\"\n        [promiseBtn]=\"endlessInitialPromise\">Loading initially and forever\n</button>\n\n<h3>Same promise buttons</h3>\n<button class=\"btn btn-raised\"\n        (click)=\"success($event)\"\n        [promiseBtn]=\"successPromise\">We\n</button>\n<button class=\"btn btn-raised\"\n        (click)=\"success($event)\"\n        [promiseBtn]=\"successPromise\">share\n</button>\n\n<h3>Chained promise buttons</h3>\n<button class=\"btn btn-raised\"\n        (click)=\"chain()\"\n        [promiseBtn]=\"chainedPromises\">Load promise chain {{ promiseIndex }}\n</button>\n\n\n<h3>Inside a form</h3>\n<form (submit)=\"submit()\"\n      novalidate>\n  <button class=\"btn btn-raised\"\n          type=\"submit\"\n          [promiseBtn]=\"submitPromise\">Submit\n  </button>\n</form>\n\n<div>\n  <h2>Observable</h2>\n\n  <button class=\"btn btn-raised\"\n          (click)=\"initSuccessObservable()\"\n          [promiseBtn]=\"successObservable\">Success after delay\n  </button>\n  <button class=\"btn btn-raised\"\n          (click)=\"initErrorObservable()\"\n          [promiseBtn]=\"errorObservable\">Error after delay\n  </button>\n  <br>\n  <br>\n  <button class=\"btn btn-raised\"\n          (click)=\"initEndlessObservable()\"\n          [promiseBtn]=\"endlessObservable\">Never resolving Observable\n  </button>\n  <button class=\"btn btn-raised\"\n          [promiseBtn]=\"endlessInitialObservable\">Loading initially and forever\n  </button>\n\n  <h3>Same observable buttons</h3>\n  <button class=\"btn btn-raised\"\n          (click)=\"initSuccessObservable()\"\n          [promiseBtn]=\"successObservable\">We\n  </button>\n  <button class=\"btn btn-raised\"\n          (click)=\"initSuccessObservable()\"\n          [promiseBtn]=\"successObservable\">share\n  </button>\n\n  <h3>Chained observable button</h3>\n  <button class=\"btn btn-raised\"\n          (click)=\"initChainedObservable()\"\n          [promiseBtn]=\"chainedObservable\">Observable chain {{ chainedObservableValue }}\n  </button>\n</div>\n\n<div>\n  <h2>Simple Boolean</h2>\n  <button class=\"btn btn-raised\"\n          (click)=\"myBool=!myBool\">Toggle loading ({{myBool}})\n  </button>\n\n  <button class=\"btn btn-raised\"\n          [promiseBtn]=\"myBool\">My Boolean Btn {{myBool}}\n  </button>\n</div>\n","import {Angular2PromiseButtonModule} from '../../projects/angular2-promise-buttons/src';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    Angular2PromiseButtonModule\n      .forRoot({\n        // handleCurrentBtnOnly: true,\n      }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'zone.js';\nimport 'reflect-metadata';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}